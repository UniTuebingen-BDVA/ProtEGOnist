name: Build and Push Docker Image

on:
    push:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: false
                  tags: user/protegonist:latest
                  load: true # This is important, it will allow the image to be loaded to Docker environment

            - name: Save Docker image
              run: docker save user/protegonist:latest | gzip > image.tar.gz

            - name: Install SSH client
              run: sudo apt-get install -qq -y openssh-client
            - name: Transfer Docker image to server
              env:
                  DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
                  SERVER_IP: ${{ secrets.SERVER_IP }}
                  KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
              run: |
                  echo "$DEPLOY_KEY" > deploy_key
                  chmod 600 deploy_key
                  scp -o UserKnownHostsFile=$KNOWN_HOSTS -i deploy_key image.tar.gz $DOCKER_USERNAME@$SERVER_IP:/tmp

            - name: Load and run Docker image on server
              env:
                  DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
                  SERVER_IP: ${{ secrets.SERVER_IP }}
                  SERVER_DATA: ${{ secrets.SERVER_DATA }}
                  KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
              run: |
                  echo "$DEPLOY_KEY" > deploy_key
                  chmod 600 deploy_key
                  ssh -o UserKnownHostsFile=$KNOWN_HOSTS -i deploy_key $DOCKER_USERNAME@$SERVER_IP <<EOF
                    docker load < /tmp/image.tar.gz
                    docker run -v $SERVER_DATA:/data -dp 127.0.0.1:5000:5000 user/protegonist:latest
                  EOF
